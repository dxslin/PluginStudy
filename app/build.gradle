import com.slin.study.buildsrc.dsl.ServerEnvironmentPlugin
import com.slin.study.buildsrc.inject.DownloadPlugin
import com.slin.study.buildsrc.rename.ApkRenamePlugin
import com.slin.study.buildsrc.incremental.IncrementalReverseTask
import com.slin.study.buildsrc.rename.RenamePlugin
import com.slin.study.buildsrc.rename.RenameTask
import com.slin.study.buildsrc.site.SitePlugin

//import com.slin.study.buildsrc.VersionPlugin
//apply plugin: VersionPlugin
apply plugin: 'com.slin.study.version'
apply plugin: 'com.android.application'
//apply plugin: 'com.slin.study.gradle.plugin.slin_gradle_plugin'

apply plugin: ApkRenamePlugin
apply plugin: RenamePlugin
apply plugin: ServerEnvironmentPlugin
apply plugin: SitePlugin
apply plugin: DownloadPlugin

apply plugin: "com.slin.study.gradle.plugin.process_templates_fixed"
apply plugin: "com.slin.study.gradle.plugin.process_templates"



android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.slin.study.plugin"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        flavorDimensions "versionCode"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        mainapp {

        }
        baidu {

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}


def file = layout.buildDirectory.file("hello.txt")
file.get().asFile.withWriter {
    it.write("Hello Klee!\n")
    it.write("Hello Jean!\n")
    it.write("Hi Amber!\n")
}

//下面为直接在build.gradle文件中创建Task示例
abstract class GreetingToFileTask extends org.gradle.api.DefaultTask {

    @org.gradle.api.tasks.OutputFile
    abstract org.gradle.api.file.RegularFileProperty getDestination()

    @org.gradle.api.tasks.TaskAction
    def greet() {
        def file = getDestination().get().asFile
        file.parentFile.mkdirs()
        file.write 'Hello!'
    }
}

def greetingFile = objects.fileProperty()

tasks.create('greet', GreetingToFileTask) {
    destination = greetingFile
}

tasks.create('sayGreeting') {
    dependsOn greet
    doLast {
        def greetFile = greetingFile.get().asFile
        println "${greetFile.text} (file: ${greetFile.name})"
    }
}

greetingFile.set(layout.buildDirectory.file('hello.txt'))


tasks.register("renameTest", RenameTask) {
    dependsOn "greet"
    group "version"

    inputFile = layout.buildDirectory.file('hello.txt')
    rule = "new_hello.txt"
    outDir = layout.buildDirectory.dir("outputs")
}

// 测试增量任务
tasks.register("IncrementalReverse", IncrementalReverseTask) {
    it.group = "version"

    it.inputFile = file
    it.inputDir = layout.buildDirectory.dir("outputs")
    it.outputDir = layout.buildDirectory.dir("rename")
    it.inputProperty = ""
}


// 下面演示的是DSL配置
apkRenameExt {
    rule = "${project.name}_${project.android.defaultConfig.versionCode}_\$DATE.apk"
    outDir = layout.buildDirectory.dir("apks")
}

renameExt {
    inputFile = file
    rule = "\$NAME_\$DATE.\$TYPE"
    outDir = layout.buildDirectory.dir("rename")
}


environments {
    dev {
        url = 'http://localhost:8080'
    }

    staging {
        url = 'http://staging.enterprise.com'
    }

    production {
        url = 'http://prod.enterprise.com'
    }
}
serversExt {
    serverEnv {
        dev {
            url = 'http://localhost:8080'
        }

        staging {
            url = 'http://staging.enterprise.com'
        }
    }
}

site {
    outputDir = layout.buildDirectory.file("mysite")

    customData {
        websiteUrl = 'https://gradle.org'
        vcsUrl = 'https://github.com/gradle/gradle-site-plugin'
    }
}

downloadExt {
    inputFiles "${buildDir.path}/hello.txt"

    hostPath {
        hostName = "www.baidu.com"
        path = "/search?s="
    }
    resources {
        gradle {
            uri = uri('https://gradle.org')
        }
        baidu {
            uri = uri('https://baidu.com')
            aliasName = "bd"
        }
    }
    // 也可以这样写
//    resources {
//        register('gradle') {
//            uri = uri('https://gradle.org')
//        }
//        register('baidu') {
//            uri = uri('https://baidu.com')
//            aliasName = "bd"
//        }
//    }
}


processTemplates{
    templateEngineType = "ReplaceTemplateEngine"
//    sourceFiles(layout.buildDirectory.file("hello.txt"))
    sourceFiles layout.buildDirectory.file("hello.txt")
    templateData {
        name = "Genshin"
        variables = ["Hello": "Hi", "Klee":"可莉", "Amber":"安柏", "Jean":"琴"]
    }
    outputDir = layout.buildDirectory.dir("outputs")
}
