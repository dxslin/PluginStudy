import com.slin.study.buildsrc.dsl.ServerEnvironmentPlugin
import com.slin.study.buildsrc.inject.DownloadPlugin
import com.slin.study.buildsrc.rename.ApkRenamePlugin
import com.slin.study.buildsrc.incremental.IncrementalReverseTask
import com.slin.study.buildsrc.rename.RenamePlugin
import com.slin.study.buildsrc.site.SitePlugin

//import com.slin.study.buildsrc.VersionPlugin
apply plugin: 'com.android.application'
//apply plugin: VersionPlugin
apply plugin: 'com.slin.study.version'
//apply plugin: 'com.slin.study.gradle.plugin.slin_gradle_plugin'

apply plugin: ApkRenamePlugin
apply plugin: RenamePlugin
apply plugin: ServerEnvironmentPlugin
apply plugin: SitePlugin
apply plugin: DownloadPlugin



android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.slin.study.plugin"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        flavorDimensions "versionCode"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        mainapp {

        }
        baidu {

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

apkRenameExt {
    rule = "${project.name}_${project.android.defaultConfig.versionCode}_\$DATE.apk"
    outDir = layout.buildDirectory.dir("apks")
}


def file = layout.buildDirectory.file("hello.txt")
file.get().asFile.withWriter {
    it.write("Hello Slin")
}
renameExt{
    inputFile = file
    rule = "\$NAME_\$DATE.\$TYPE"
    outDir = layout.buildDirectory.dir("rename")
}

// 测试增量任务
tasks.register("IncrementalReverse", IncrementalReverseTask){
    it.inputFile = file
    it.inputDir = layout.buildDirectory.dir("outputs")
    it.outputDir = layout.buildDirectory.dir("rename")
    it.inputProperty = ""
    it.group = "version"
}

environments {
    dev {
        url = 'http://localhost:8080'
    }

    staging {
        url = 'http://staging.enterprise.com'
    }

    production {
        url = 'http://prod.enterprise.com'
    }
}
serversExt{
    serverEnv{
        dev {
            url = 'http://localhost:8080'
        }

        staging {
            url = 'http://staging.enterprise.com'
        }
    }
}

site {
    outputDir = layout.buildDirectory.file("mysite")

    customData {
        websiteUrl = 'https://gradle.org'
        vcsUrl = 'https://github.com/gradle/gradle-site-plugin'
    }
}

downloadExt{
    hostPath {
        hostName = "www.baidu.com"
        path = "/search?s="
//        uri = "www.baidu.com"
    }
    resources {
        register('gradle') {
            uri = uri('https://gradle.org')
        }
        register('baidu') {
            uri = uri('https://baidu.com')
            aliasName = "bd"
        }
    }
}

download {
    // Can use a block to configure the container contents
    resources {
        register('gradle') {
            uri = uri('https://gradle.org')
        }
        register('baidu') {
            uri = uri('https://baidu.com')
            aliasName = "bd"
        }
    }
}


